"""empty message

Revision ID: 9911ae28fd8c
Revises: 136f80adf8ea
Create Date: 2025-01-17 18:28:23.919995

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9911ae28fd8c'
down_revision = '136f80adf8ea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=True),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('transaction_limit', sa.Integer(), nullable=True),
    sa.Column('features', sa.String(length=255), nullable=True),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('price', sa.String(length=50), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombres', sa.String(length=255), nullable=False),
    sa.Column('primer_apellido', sa.String(length=255), nullable=False),
    sa.Column('segundo_apellido', sa.String(length=255), nullable=True),
    sa.Column('nacionalidad', sa.String(length=100), nullable=True),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=True),
    sa.Column('direccion', sa.String(length=255), nullable=True),
    sa.Column('localidad', sa.String(length=255), nullable=True),
    sa.Column('pais', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('telefono_movil', sa.String(length=20), nullable=True),
    sa.Column('telefono_fijo', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('empresa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('razon_social', sa.String(length=255), nullable=True),
    sa.Column('cif', sa.String(length=50), nullable=True),
    sa.Column('tipo', sa.String(length=50), nullable=True),
    sa.Column('domicilio', sa.String(length=255), nullable=True),
    sa.Column('municipio', sa.String(length=255), nullable=True),
    sa.Column('provincia', sa.String(length=255), nullable=True),
    sa.Column('cod_postal', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('web', sa.String(length=255), nullable=True),
    sa.Column('url_anuncio', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('reserva_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('traveler01_id', sa.Integer(), nullable=True),
    sa.Column('traveler01_relac', sa.String(length=100), nullable=True),
    sa.Column('traveler02_id', sa.Integer(), nullable=True),
    sa.Column('traveler02_relac', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['traveler01_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['traveler02_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reserva',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_entrada', sa.Date(), nullable=True),
    sa.Column('fecha_salida', sa.Date(), nullable=True),
    sa.Column('alojamiento', sa.Integer(), nullable=True),
    sa.Column('nro_rooms', sa.Integer(), nullable=True),
    sa.Column('nro_viajeros', sa.String(length=50), nullable=True),
    sa.Column('metodo_pago', sa.String(length=50), nullable=True),
    sa.Column('traveler_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['alojamiento'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['traveler_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensible_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nif_tipo', sa.String(length=50), nullable=True),
    sa.Column('nif_nunero', sa.String(length=50), nullable=True),
    sa.Column('nif_country', sa.String(length=100), nullable=True),
    sa.Column('firmas', sa.String(length=255), nullable=True),
    sa.Column('medio_pago_tipo', sa.String(length=50), nullable=True),
    sa.Column('medio_pago_nro', sa.Integer(), nullable=True),
    sa.Column('medio_pago_expira', sa.Date(), nullable=True),
    sa.Column('fecha_pago', sa.Date(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('datos_viajero', schema=None) as batch_op:
        batch_op.drop_index('ix_datos_viajero_nif')

    op.drop_table('datos_viajero')
    with op.batch_alter_table('transaccion', schema=None) as batch_op:
        batch_op.drop_index('ix_transaccion_referencia')

    op.drop_table('transaccion')
    op.drop_table('qr_database')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('plan_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('account_id', sa.Integer(), nullable=True))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.create_foreign_key(None, 'account', ['account_id'], ['id'])
        batch_op.create_foreign_key(None, 'plan', ['plan_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.drop_column('account_id')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('plan_id')
        batch_op.drop_column('role')

    op.create_table('qr_database',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('archivo', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='qr_database_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='qr_database_pkey')
    )
    op.create_table('transaccion',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('viajero_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('referencia', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('fecha_transaccion', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('firmas', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('fecha_hora_entrada', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('fecha_hora_salida', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('direccion', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('numero_habitaciones', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('conexion_internet', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('identificacion_medio_pago', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('titular_medio_pago', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('fecha_caducidad_tarjeta', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('fecha_pago', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='transaccion_user_id_fkey'),
    sa.ForeignKeyConstraint(['viajero_id'], ['datos_viajero.id'], name='transaccion_viajero_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transaccion_pkey')
    )
    with op.batch_alter_table('transaccion', schema=None) as batch_op:
        batch_op.create_index('ix_transaccion_referencia', ['referencia'], unique=False)

    op.create_table('datos_viajero',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('primer_apellido', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('segundo_apellido', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('sexo', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('nif', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('numero_soporte_documento', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('tipo_documento', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('nacionalidad', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('fecha_nacimiento', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('direccion', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('localidad', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('pais', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('telefono_fijo', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('telefono_movil', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('numero_viajeros', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parentesco_viajeros', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='datos_viajero_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='datos_viajero_pkey')
    )
    with op.batch_alter_table('datos_viajero', schema=None) as batch_op:
        batch_op.create_index('ix_datos_viajero_nif', ['nif'], unique=True)

    op.drop_table('sensible_data')
    op.drop_table('reserva')
    op.drop_table('group')
    op.drop_table('user_permission')
    op.drop_table('empresa')
    op.drop_table('contact')
    op.drop_table('plan')
    op.drop_table('account')
    # ### end Alembic commands ###
